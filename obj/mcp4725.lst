C251 COMPILER V5.60.0,  mcp4725                                                            18/01/24  11:12:19  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE mcp4725
OBJECT MODULE PLACED IN .\obj\mcp4725.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Hardware\Mcp4725\mcp4725.c XSMALL INTR2 OPTIMIZE(0,SPEED) BROWSE INCDI
                    -R(.\User;.\Hardware\CalcDoseRate;.\Hardware\Cmd;.\Hardware\Flash;.\Hardware\IIC;.\Hardware\Mcp4725;.\Hardware\Sensor;.\H
                    -ardware\System;.\Hardware\Uart;.\User;.\Hardware\BatVoltage;.\Hardware\DoseRate;.\Hardware\CalcCps;.\Hardware\CRC;.\Hard
                    -ware\Queue) PRINT(.\obj\mcp4725.lst) OBJECT(.\obj\mcp4725.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "mcp4725.h"
    3          #include "i2c.h"
    4          
    5          //========================================================================
    6          // 函数名称: void MCP4725_OutVol(BYTE addr,char *voltage)
    7          // 函数功能: 转换输出为电压值
    8          // 入口参数: @addr：I2C地址；@*voltage：要转换的数据指针
    9          // 函数返回: 无
   10          // 当前版本: VER1.0
   11          // 修改日期: 2023.5.5
   12          // 当前作者:
   13          // 其他备注: 
   14          //========================================================================
   15          
   16          void MCP4725_OutVol(BYTE addr,unsigned int voltage)
   17          {
   18   1              DWORD uiVolTemp;
   19   1          unsigned int vol_tmp;
   20   1              BYTE out_data = 0;
   21   1              vol_tmp = voltage;
   22   1              if(vol_tmp >= MCP4725_REF_VOL)
   23   1              {
   24   2                      //printf("input voltage > ref voltage\r\n");
   25   2                      return;
   26   2              }
   27   1      
   28   1          uiVolTemp = vol_tmp;
   29   1              uiVolTemp = uiVolTemp*4096l/MCP4725_REF_VOL;
   30   1              I2C_Start(1);
   31   1              out_data = addr<<1;
   32   1              I2C_Write_Byte(1);
   33   1              I2C_ReadAck(1);
   34   1              out_data = ((uiVolTemp>>8)&0xf)|MCP4725_PD_MODE;   // 高8位
   35   1          //out_data = uiVolTemp & 0xff;       // 低8位
   36   1              I2C_Write_Byte(1);
   37   1              I2C_ReadAck(1);
   38   1          //out_data = ((uiVolTemp>>8)&0xf)|MCP4725_PD_MODE;   // 高8位
   39   1              out_data = uiVolTemp & 0xff;       // 低8位
   40   1              I2C_Write_Byte(1);
   41   1              I2C_ReadAck(1);
   42   1              I2C_Stop(1);
   43   1      }
   44          
   45          #if 0
               unsigned int MCP4725_Read(unsigned char addr)
               {
                       unsigned int uiTemp1,uiTemp2,dat;
               
                       I2C_Start();
                       I2C_Write_Byte((addr<<1) | 1);
                       I2C_Read_Byte(I2C_ACK);
                       uiTemp1 = I2C_Read_Byte(I2C_ACK);
                       uiTemp2 = I2C_Read_Byte(I2C_NACK);
                       I2C_Stop();
                       dat = ((uiTemp1&0xf)<<4 |(uiTemp2>>4) ) | (uiTemp1<<4); 
C251 COMPILER V5.60.0,  mcp4725                                                            18/01/24  11:12:19  PAGE 2   

                       return dat;
               }
               #endif
   60          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       847     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        13     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
